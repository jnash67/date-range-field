<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- for more info on creating addon with Maven see:
        https://vaadin.com/forum#!/thread/5166129
        and
        https://github.com/mstahv/vodatime/tree/vaadin7
        The jar is built with: mvn install assembly:single
    -->

    <groupId>org.vaadin.addon</groupId>
    <artifactId>daterangefield</artifactId>
    <version>1.0.1</version>
    <name>DateRangeField</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <vaadin.version>7.1.13</vaadin.version>
        <skipTests>true</skipTests>
        <lombok.version>1.12.4</lombok.version>
        <javax.servlet.api.version>2.5</javax.servlet.api.version>
        <jodatime.version>2.3</jodatime.version>
        <stepper.addon.version>2.1.2</stepper.addon.version>
        <maven-compiler-plugin.version>3.1</maven-compiler-plugin.version>
        <maven-jar-plugin.version>2.3.1</maven-jar-plugin.version>
        <maven-war-plugin.version>2.4</maven-war-plugin.version>
        <maven-source-plugin.version>2.1.2</maven-source-plugin.version>
        <maven-clean-plugin.version>2.5</maven-clean-plugin.version>
        <vaadin.plugin.version>${vaadin.version}</vaadin.plugin.version>
    </properties>

    <!-- google only supports https:, not git: or ssh: -->
    <scm>
        <url>https://code.google.com/p/date-range-field/</url>
        <connection>scm:git:https://code.google.com/p/date-range-field/</connection>
        <developerConnection>scm:git:https://code.google.com/p/date-range-field/</developerConnection>
        <tag>date-range-field add-on</tag>
    </scm>

    <issueManagement>
        <system>code.google.com</system>
        <url>https://code.google.com/p/date-range-field/issues</url>
    </issueManagement>

    <licenses>
        <license>
            <name>Apache 2</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
            <comments>A business-friendly OSS license</comments>
        </license>
    </licenses>

    <repositories>
        <repository>
            <id>vaadin-addons</id>
            <url>http://maven.vaadin.com/vaadin-addons</url>
        </repository>
        <repository>
            <id>maven2-repository.dev.java.net</id>
            <name>Java.net Maven 2 Repository</name>
            <url>http://download.java.net/maven/2</url>
            <layout>default</layout>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>vaadin-snapshots</id>
            <url>http://oss.sonatype.org/content/repositories/vaadin-snapshots/</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>vaadin-snapshots</id>
            <url>http://oss.sonatype.org/content/repositories/vaadin-snapshots/</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

    <dependencies>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-server</artifactId>
            <version>${vaadin.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-client</artifactId>
            <version>${vaadin.version}</version>
            <scope>provided</scope>
        </dependency>
        <!--
          Needed when using the widgetset optimizer (custom ConnectorBundleLoaderFactory).

          For widgetset compilation, vaadin-client-compiler is automatically added on the
          compilation classpath by vaadin-maven-plugin so normally there is no need for an
          explicit dependency.
         -->
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-client-compiler</artifactId>
            <version>${vaadin.version}</version>
            <scope>provided</scope>
        </dependency>
        <!--
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-push</artifactId>
            <version>${vaadin.version}</version>
        </dependency>
        -->
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-themes</artifactId>
            <version>${vaadin.version}</version>
        </dependency>
        <!-- for 3.0.1 the artifactId is javax.servlet-api.  For 2.5 it's just servlet-api. -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>${javax.servlet.api.version}</version>
            <scope>provided</scope>
        </dependency>
        <!-- Lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>provided</scope>
        </dependency>
        <!-- joda-time -->
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>${jodatime.version}</version>
        </dependency>
        <!-- stepper -->
        <dependency>
            <groupId>org.vaadin.addons</groupId>
            <artifactId>stepper</artifactId>
            <version>${stepper.addon.version}</version>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <version>${maven-war-plugin.version}</version>
                <configuration>
                    <webXml>web/WEB-INF/web.xml</webXml>
                    <packagingExcludes>
                        **/VAADIN/gwt-unitCache/**,
                        **/VAADIN/widgetsets/WEB-INF/**,
                        **/WEB-INF/lib/servlet-api-*.jar,
                        **/WEB-INF/lib/vaadin-client-*.jar,
                        **/WEB-INF/lib/jetty-*.jar,
                        **/WEB-INF/lib/ant-*.jar,
                        **/WEB-INF/classes/gwt-unitCache/**,
                        **/WEB-INF/classes/themes/**,
                        **/WEB-INF/classes/widgetsets/**
                    </packagingExcludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>1.6</source>
                    <target>1.6</target>
                </configuration>
            </plugin>
            <!-- As we are doing "inplace" GWT compilation, ensure the widgetset -->
            <!-- directory is cleaned properly -->
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <version>${maven-clean-plugin.version}</version>
                <!-- include this if you want plugin to wipe out widgetsets as well
                DON'T INCLUDE IF YOUR RUN CONFIG DOES A MAVEN CLEAN FIRST
                -->
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>src/main/webapp/VAADIN/widgetsets</directory>
                        </fileset>
                        <fileset>
                            <directory>src/main/webapp/VAADIN/gwt-unitCache</directory>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${maven-jar-plugin.version}</version>
                <configuration>
                    <archive>
                        <index>true</index>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <!-- Implementation-Title and Implementation-Version come from the
                            POM by default -->
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                        </manifest>
                        <manifestEntries>
                            <!-- Package format version - do not change -->
                            <Vaadin-Package-Version>1</Vaadin-Package-Version>

                            <!-- UNCOMMENT FOR PROJECTS THAT HAVE A WIDGETSET
                            Comma-separated list of widgetsets in the package
                            -->
                            <Vaadin-Widgetsets>org.vaadin.addon.daterangefield.DateRangeFieldWidgetSet</Vaadin-Widgetsets>

                        </manifestEntries>
                    </archive>
                    <excludes>
                        <!-- Remove resources included due to gwt compilation
                        <exclude>**/demoandtestapp/*</exclude>
                        -->
                    </excludes>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>${maven-source-plugin.version}</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <includeScope>runtime</includeScope>
                            <outputDirectory>target/libs</outputDirectory>
                            <!-- configure the plugin here -->
                        </configuration>
                    </execution>
                </executions>
            </plugin>


            <!-- This creates a zip file of jar and sources jar. When publishing in
            the Directory this makes sources available to maven users automatically.
            We could also use this to package required dependecies for those poor developer
            souls that still dont know how to use a build system that supports transient
            dependencies... -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <finalName>${project.artifactId}-${project.version}</finalName>
                    <appendAssemblyId>false</appendAssemblyId>
                    <descriptors>
                        <descriptor>assembly.xml</descriptor>
                    </descriptors>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.vaadin</groupId>
                <artifactId>vaadin-maven-plugin</artifactId>
                <version>${vaadin.plugin.version}</version>
                <executions>
                    <execution>
                        <id>testwidgetset</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                        <configuration>
                            <skip>${skipTests}</skip>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>

        <resources>
            <resource>
                <!-- This add sources, .gwt.xml files etc to jar from source directory.
                Not quite maven convention byt easieast to setup this way. -->
                <directory>src/main/java</directory>
            </resource>
            <!-- This is here to simplify working with GWT plugin during test widgetset
            compilation. Test widgetset is this way more like a real world usage and
            also lets your test up to e.g. use other add-ons. Ensure these are excluded
            from the artifact ( jar file ). -->
            <resource>
                <directory>src/test/resources</directory>
            </resource>
        </resources>

        <pluginManagement>
            <plugins>
                <!--This plugin's configuration is used to store Eclipse m2e settings
                only. It has no influence on the Maven build itself. -->
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>
                                            com.vaadin
                                        </groupId>
                                        <artifactId>
                                            vaadin-maven-plugin
                                        </artifactId>
                                        <versionRange>
                                            [2.3.0-1,)
                                        </versionRange>
                                        <goals>
                                            <goal>
                                                compile
                                            </goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore></ignore>
                                    </action>
                                </pluginExecution>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>
                                            org.apache.maven.plugins
                                        </groupId>
                                        <artifactId>
                                            maven-dependency-plugin
                                        </artifactId>
                                        <versionRange>
                                            [2.0.0,)
                                        </versionRange>
                                        <goals>
                                            <goal>
                                                copy-dependencies
                                            </goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore></ignore>
                                    </action>
                                </pluginExecution>
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>